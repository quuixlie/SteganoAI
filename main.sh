#!/bin/bash
# Author           : quuixlie
# Created On       : 23.04.2024 r.
# Version          : 1.0.0
#
# Description      :
# This script handle help, main loop, version and invalid options.
#
# Licensed under GPL (see /usr/share/common-licenses/GPL for more details
# or contact # the Free Software Foundation for a copy)


source ./config.sh
source ./lib/menu.sh

function handle_help {
    echo "Usage: ./$(basename $0)"
    echo "Options:"
    echo "  -h, --help     Display this help message"
    echo "  -v, --version  Display version information"
    echo "Description:"
    echo "  This script allows you to send an email with an attachment, extract data from an image, hide a message in an image, generate text and an image using ChatGPT."
    echo "  The main purpose of this script is hidden communication via email, under the guise of innocent emails with photos attached."
    echo "  Images can be generated using ChatGPT and then used to hide messages using steganography (LSB)."
    echo "  Moreover, ChatGPT can be used to generate text messages, which can be sent via email."
    echo "  The script can also scrap unread emails from the inbox and extract data from images attached to them."
    echo "  Change max number of emails to scrap and size of generated images by ChatGPT in config.sh."
    echo "  Remember that size of the image generated by ChatGPT is not arbitrary (check ChatGPT API documentation)."
    echo "Additional information:"
    echo "  You need ChatGPT API key to use ChatGPT functionality. You can get it here: https://platform.openai.com/account/api-keys"
    echo "  You need to enable 'Less secure app access' in your Gmail account settings to send emails using Gmail or change the script to work with other email providers."
    echo "  https://knowledge.workspace.google.com/kb/how-to-create-app-passwords-000009237"
    exit 0
}

function handle_version {
    echo "Version: 1.0.0"
    exit 0
}

function handle_invalid_option {
    echo "Invalid option. Use -h or --help to display help message."
    exit 1
}

if [[ $# -eq 0 ]]; then
    while [[ $IS_RUNNING == true ]]; do
        print_main_menu
        read -p "Enter your choice: " choice
        handle_main_menu_input $choice
    done
elif [[ $# -eq 1 ]]; then
    case $1 in
        -h|--help)
            handle_help
            ;;
        -v|--version)
            handle_version
            ;;
        *)
            handle_invalid_option
            ;;
    esac
else
    handle_invalid_option
fi